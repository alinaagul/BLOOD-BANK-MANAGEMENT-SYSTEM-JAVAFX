--DONOR TABLE INFO (REGISTER IT)----
CREATE TABLE Donors (
    donor_id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    email VARCHAR2(255) NOT NULL,
    full_name VARCHAR2(255) NOT NULL,
    father_name VARCHAR2(255),
    blood_group VARCHAR2(5) NOT NULL,
    mother_name VARCHAR2(255),
    city VARCHAR2(255),
    complete_address VARCHAR2(4000), 
    mobile_number VARCHAR2(15),
    age VARCHAR2(15),
    gender VARCHAR2(10),
     DiseaseID INT,
    FOREIGN KEY (DiseaseID) REFERENCES Disease(DiseaseID),
    registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO Donors (email, full_name, father_name, blood_group, mother_name, city, complete_address, mobile_number, age, gender, DiseaseID)
VALUES ('alinagul@gmail.com', 'Alina Gul', ' Gul Bahar Khan', 'A+', 'Rukhsana Gul', 'Rwp', '123 Main St, RWP, NY', '1234567890', 20, 'Female', 1);

INSERT INTO Donors (email, full_name, father_name, blood_group, mother_name, city, complete_address, mobile_number, age, gender, DiseaseID)
VALUES ('jane.smith@yahoo.com', 'Jane Smith', 'Robert Smith', 'B-', 'Mary Smith', 'Los Angeles', '456 Oak St, Los Angeles, CA', 30, '9876543210', 'Female', 2);

INSERT INTO Donors (email, full_name, father_name, blood_group, mother_name, city, complete_address, mobile_number, age, gender, DiseaseID)
VALUES ('amir.hassan@outlook.com', 'Amir Hassan', 'Abdul Hassan', 'B+', 'Zainab Hassan', 'Islamabad', '123 Rose Lane, Islamabad, Pakistan', '5551234567', 30, 'Male', 3);



--STORED PROCEDURE--
CREATE OR REPLACE PROCEDURE ADD_DONOR(
    p_email VARCHAR2,
    p_full_name VARCHAR2,
    p_father_name VARCHAR2,
    p_blood_group VARCHAR2,
    p_mother_name VARCHAR2,
    p_city VARCHAR2,
    p_complete_address VARCHAR2,
    p_mobile_number VARCHAR2,
    p_gender VARCHAR2,
    p_disease_id NUMBER DEFAULT NULL
)
AS
BEGIN
    INSERT INTO Donors (email, full_name, father_name, blood_group, mother_name, city, complete_address, mobile_number, gender, DiseaseID)
    VALUES  (p_email, p_full_name, p_father_name, p_blood_group, p_mother_name, p_city, p_complete_address, p_mobile_number, p_gender, p_disease_id);
    
    COMMIT;
END;

BEGIN
    ADD_DONOR('alinagul@gmail.com', 'Alina Gul', 'Gul Bahar Khan', 'A+', 'Rukhsana Gul', 'Rwp', '123 Main St, RWP, NY', '1234567890', 'Female', 1);
END;


CREATE OR REPLACE PROCEDURE update_donor(
    p_donor_id NUMBER,
    p_email VARCHAR2,
    p_full_name VARCHAR2,
    p_father_name VARCHAR2,
    p_blood_group VARCHAR2,
    p_mother_name VARCHAR2,
    p_city VARCHAR2,
    p_complete_address VARCHAR2,
    p_mobile_number VARCHAR2,
    p_gender VARCHAR2
)
AS
BEGIN
    UPDATE Donors
    SET email = p_email,
        full_name = p_full_name,
        father_name = p_father_name,
        blood_group = p_blood_group,
        mother_name = p_mother_name,
        city = p_city,
        complete_address = p_complete_address,
        mobile_number = p_mobile_number,
        gender = p_gender
    WHERE donor_id = p_donor_id;
    COMMIT;
END;
BEGIN
    ADD_DONOR('alinagul@gmail.com', 'Alina Gul', 'Gul Bahar Khan', 'A+', 'Rukhsana Gul', 'Rwp', '123 Main St, RWP, NY', '1234567890', 'Female', 1);
END;

CREATE OR REPLACE PROCEDURE delete_donor(p_donor_id INT)
AS
BEGIN
    DELETE FROM Donors WHERE donor_id = p_donor_id;
    
    COMMIT;
END;

select * from Donors;






----DISEASE MANAGEMENT--------------
CREATE TABLE Disease (
    DiseaseID NUMBER PRIMARY KEY,
    DiseaseName VARCHAR2(255),
    Type VARCHAR2(255)
);

INSERT INTO Disease (DiseaseID, DiseaseName, Type) VALUES (1, 'Flu', 'Viral');
INSERT INTO Disease (DiseaseID, DiseaseName, Type) VALUES (2, 'Hypertension', 'Chronic');
INSERT INTO Disease (DiseaseID, DiseaseName, Type) VALUES (3, 'Diabetes', 'Metabolic');

--JOIN-----
SELECT Donors.donor_id,Donors.full_name, Disease.DiseaseID, Disease.DiseaseName, Disease.Type
FROM Donors
JOIN Disease ON Donors. DiseaseID = Disease.DiseaseID;

--SUBQUERY-----
SELECT Donors.donor_id, Donors.full_name, Disease.DiseaseID, Disease.DiseaseName, Disease.Type
FROM Donors
JOIN Disease ON Donors.DiseaseID = Disease.DiseaseID
WHERE Donors.full_name = (
    SELECT full_name
    FROM Donors
    WHERE full_name = 'Alina Gul'
);
--UPDATE---
CREATE OR REPLACE PROCEDURE UPDATE_DISEASE_DETAILS(
    P_DISEASE_ID IN NUMBER,
    P_DISEASE_NAME IN VARCHAR2,
    P_DISEASE_TYPE IN VARCHAR2
)
IS
BEGIN
    UPDATE Disease
    SET DiseaseName = P_DISEASE_NAME, Type = P_DISEASE_TYPE
    WHERE DiseaseID = P_DISEASE_ID;
    
    COMMIT;
END UPDATE_DISEASE_DETAILS;
--DELETE----
CREATE OR REPLACE PROCEDURE DELETE_DISEASE(p_disease_id IN NUMBER) IS
BEGIN
    DELETE FROM Disease WHERE DiseaseID = p_disease_id;
    COMMIT;
END DELETE_DISEASE;


--TRIGGER CREATION-----------------
CREATE OR REPLACE TRIGGER delete_associated_donors_trigger
BEFORE DELETE ON Disease
FOR EACH ROW
BEGIN
    DELETE FROM Donors WHERE DiseaseID = :OLD.DiseaseID;
END;






----BLOOD TYPE PAGE MANAGEMENT-------------------
CREATE TABLE BloodTypes (
    blood_type_id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    type VARCHAR2(10) NOT NULL
);
INSERT INTO BloodTypes (type) VALUES ('A+');
INSERT INTO BloodTypes (type) VALUES ('AB+');
INSERT INTO BloodTypes (type) VALUES ('A-');
INSERT INTO BloodTypes (type) VALUES ('O');
INSERT INTO BloodTypes (type) VALUES ('AB+');
select * from BloodTypes;
CREATE OR REPLACE PROCEDURE update_blood_type(
    p_blood_type_id IN INT,
    p_type IN VARCHAR2
) AS
BEGIN
    UPDATE BloodTypes
    SET
        type = p_type
    WHERE blood_type_id = p_blood_type_id;

    COMMIT;
    END update_blood_type;
BEGIN
    update_blood_type('A+');
END;
CREATE PROCEDURE DeleteBloodType(IN blood_type_id_param INT)
BEGIN
    DELETE FROM BloodTypes WHERE blood_type_id = blood_type_id_param;
END;
